#+TITLE: GENERAL EMACS NOTES
#+STARTUP: fold

* Base
** Useful Bindings
|---------+------------------------------------------------------------|
| M-SPC   | cycle spacing - just one / remove all / restore original   |
| M-\     | delete all whitespace around point (ahead / behind)        |
| M-^     | join two lines (newline removed) separated by space        |
| C-x C-o | delete blank lines (leaving only one)                      |
| C-M-\   | indents each line in region as if hitting tab at beginning |
|---------+------------------------------------------------------------|
| C-d     | same as delete key                                         |
| M-d     | delete region (ahead of cursor)                            |
|---------+------------------------------------------------------------|
| M-=     | display word / character count                             |
|---------+------------------------------------------------------------|
| C-x +   | balance window split panes                                 |
|---------+------------------------------------------------------------|

** Useful Commands
|---------------------+---------------------------------------------------|
| list-faces-display  | show current font face definition (color / style) |
| list-colors-display | show displayable colors                           |
| info-apropos        | good for searching through emacs manuals          |
|---------------------+---------------------------------------------------|

** TRAMP
*** local to server
basic syntax
: /ssh:user@server:/path/to/file
- try =sshx= if =ssh= isn't working correctly

*** local to jump to server
some extra config required (needs validation)

: ~/.ssh/config
# ProxyCommand
# ProxyJump

#+begin_src sh
Host server  # server is the target goal
  Hostname server
  User real.user

  # either
  ProxyJump jump.server
  # or
  ProxyCommand ssh jump.server -W %h:%p # whatever options needed
#+end_src

** Server Daemon
Configure to run in daemon mode on startup
#+begin_src bash
  emacs --daemon
  # on mac, do this
  emacs --fg-daemon
#+end_src

Alias "emacs" to instead run emacsclient
#+begin_src bash
# -c : create new frame instead of using current
# -a : alternative fall back if server broken / not running
emacsclient -c -a "emacs"
#+end_src

* Org-Mode
** Helpful Bindings
*** General
|----------------+------------------------------------------------------------|
| C-ret          | new heading, at end of subtree                             |
| M-ret          | insert new heading / item / row (next line)                |
|----------------+------------------------------------------------------------|
| M-left/right   | change current heading level (only)                        |
| M-S-left/right | change entire subtree heading level                        |
|----------------+------------------------------------------------------------|
| M-up/down      | move subtree order for heading subtree / item + subitems   |
|----------------+------------------------------------------------------------|
| C-c C-x C-w    | remove subtree, but save for pasting                       |
| C-c C-x C-y    | paste subtree, with modified heading level                 |
|----------------+------------------------------------------------------------|
| C-c C-w        | refile entry or region somewhere else                      |
|----------------+------------------------------------------------------------|
| C-c ^          | sort same level entries                                    |
| C-c '          | when in source block, open into major mode, again to close |
| C-c -          | toggle line / region as list                               |
| C-c *          | toggle item into subheading of current level               |
|----------------+------------------------------------------------------------|
| C-u C-c C-c    | when at head of list, toggles all to checklist             |
|----------------+------------------------------------------------------------|
| C-c C-o        | open link                                                  |
| C-c &          | return to previous location                                |
|----------------+------------------------------------------------------------|
| C-c C-f        | move forward to next heading at same level                 |
| C-c C-b        | move backward to previous heading at same level            |
|----------------+------------------------------------------------------------|

*** Agenda
|---------+--------------------------------------------|
| C-c C-d | add deadline date (with DEADLINE preface)  |
| C-c C-s | add schedule date (with SCHEDULED preface) |
| C-c .   | just add date / time                       |
|---------+--------------------------------------------|

free form syntax for date / time: e.g. 12/20 1pm+1 == 1-2pm

in agenda view: (/) filter (|) remove filters (t) toggle todo state

*** Tags
|---------+------------------------------------------------|
| C-c C-q | add tags                                       |
| C-c /   | filter org file based on query (match == tags) |
| C-c C-c | remove sparse tree view + highlighting         |
|---------+------------------------------------------------|

*** Tables
|-----------+------------------------------------|
| C-c C-c   | realign table                      |
| TAB       | realign table + move to next field |
| M-S-right | insert column at point             |
| M-S-down  | insert row at opint                |
|-----------+------------------------------------|

*** Visual Emphasis
*bold* (*)
/italic/ (/)
_underline_ (_)
=verbatim= (=)
~code~ (~)
+strike+ (+)
: leading colon for "small examples" _other_ /markings/ also *work*

* LSP Mode
** Javascript
1) Install NVM - https://github.com/nvm-sh/nvm
- just run some cURL command ...
- ensure that ENV export commands get to the right profile file

2) Install node
: nvm install node

3) install javascript / typescript language server
- https://github.com/typescript-language-server/typescript-language-server
: npm install -g typescript-language-server typescript

* Misc Notes
** early packages of interest
org-sliced-images: https://github.com/jcfk/org-sliced-images
- display images as horizontal slices for better scrolling
- noticeable impact to performance

** regular expressions
regexp standards
https://en.wikipedia.org/wiki/Regular_expression#POSIX_basic_and_extended

** warnings
treesit related
- manually install grammars via ~treesit-install-language-grammar~

* Source Install
** Installation
https://www.gnu.org/software/emacs/manual/html_node/efaq/Installing-Emacs.html

#+begin_src bash
# unpack
tar -xvzf emacs-VERS.tar.gz

# install build deps
sudo apt-get build-dep emacs

# configure for install
# see: ./configure --help
./configure --with-native-compilation\
            --with-tree-sitter\
            --with-json\
            --with-png\
            --with-jpeg\
            --with-gif\
            --with-mailutils

# clean old and build
make clean
make
make install

# verify
emacs --version
#+end_src

** Removal
#+begin_src bash
sudo make uninstall
make clean
make distclean
#+end_src
